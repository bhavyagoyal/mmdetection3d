#!/usr/bin/env bash
#SBATCH --partition=research
###SBATCH --partition=euler-next
#SBATCH --cpus-per-task=8
#SBATCH --gres=gpu:a100:1
#SBATCH --mem=40G
#SBATCH --time=48:0:0
###SBATCH --nodelist=euler28
####SBATCH --exclude=euler05,euler01
#SBATCH --exclude=euler01,euler02,euler03,euler04,euler05,euler06,euler07,euler08,euler09,euler11,euler12,euler14
#SBATCH -o slurm.%j.%N.out # STDOUT
#SBATCH -e slurm.%j.%N.err # STDERR
#SBATCH --job-name=mmdt3d
###SBATCH --no-requeue

#export TORCH_CUDA_ARCH_LIST="7.0 7.5 8.0 9.0+PTX" 

# Environement setup used
#conda 23.3.1, cuda11.8
#conda install pytorch==2.0.0 torchvision==0.15.0 torchaudio==2.0.0 pytorch-cuda=11.8 -c pytorch -c nvidia
#install mmcv without mim, using pip instead
#pip install "mmcv>=2.0.1" -f  https://download.openmmlab.com/mmcv/dist/cu118/torch2.0.0/index.html
#pip install mmdet==3.1.0
#git clone https://github.com/open-mmlab/mmdetection3d.git -b dev-1.x
## "-b dev-1.x" means checkout to the `dev-1.x` branch.
#cd mmdetection3d
#pip install -v -e .

# Load Environment
#module load anaconda/mini/23.3.1
module load conda/miniforge/23.1.0
module load nvidia/cuda/11.8.0
bootstrap_conda
conda activate openmmlab

export CUDA_HOME=/opt/apps/cuda/x86_64/11.8.0/default

# Print GPU usage
#nvidia-smi

GPUS=1
PORTUSED=$(( $RANDOM + 10000 ))

#EXPERIMENT=work_dir_py/sbr/0.3/joint/first50000_spupdated0004_post_newfps001_repeat
EXPERIMENT=work_dir_py/kitti/pointpillar/3class/baseline
EXPERIMENT=work_dir_py/kittifusion/mvxnet/baseline_b4
##DATAPATH=/0.3/argmax-filtering-sbr/
#PORT=${PORTUSED} ./tools/dist_train.sh configs/pointpillars/pointpillars_hv_secfpn_8xb6-160e_kitti-3d-3class.py ${GPUS} --auto-scale-lr --resume --cfg-options \
PORT=${PORTUSED} ./tools/dist_train.sh configs/mvxnet/mvxnet_fpn_dv_second_secfpn_8xb2-80e_kitti-3d-3class.py ${GPUS} --auto-scale-lr --resume  --cfg-options \
	work_dir=${EXPERIMENT} \
	train_dataloader.batch_size=4 \
	default_hooks.checkpoint.interval=1 \



	#model.backbone.in_channels=5 \
	#val_dataloader.dataset.pipeline.1.transforms.2.thresh_sampling=0.2 \
	#train_dataloader.dataset.dataset.pipeline.4.thresh_sampling=0.2 \
	#model.new_fps_strat=True \
	#train_dataloader.dataset.dataset.pipeline.0.unit_probabilities=3 \
	#val_dataloader.dataset.pipeline.0.unit_probabilities=3 \
	#model.shuffle_stack=True \
	#train_dataloader.num_workers=4 \
	#train_dataloader.dataset.dataset.pipeline.4.topk_sampling=True \
	#model.bbox_head.proposals_conf=1 \
	#model.bbox_head.clip=0.9 \
	#model.train_cfg.sample_mode="random" \ 
	#model.test_cfg.sample_mode="random" \ 
	#train_dataloader.dataset.dataset.pipeline.0.norm_probabilities=3 \
	#val_dataloader.dataset.pipeline.0.norm_probabilities=3 \
	#train_dataloader.dataset.dataset.pipeline.4.pre_sort=None \
	#val_dataloader.dataset.pipeline.1.transforms.2.pre_sort=None \
	#train_dataloader.dataset.dataset.pipeline.0.unit_probabilities=True \
	#val_dataloader.dataset.pipeline.0.unit_probabilities=True \
	#model.max_neighbor=1024 \
	#val_dataloader.dataset.pipeline.1.transforms.2.probability_sampling=True \
	#train_dataloader.dataset.dataset.pipeline.4.probability_sampling=True \
	#train_dataloader.dataset.dataset.pipeline.0.cache_prefix="${TMPFOLDER}" \
#	model.backbone.sa_cfg.pool_mod='avgmax' \
	#train_dataloader.sampler.shuffle=False \
	#model.backbone.fps_sample_range_list="[5000,-1,-1,-1]" \
	#val_dataloader.dataset.pipeline.1.transforms.2.topk_sampling=True \
	#model.backbone.sa_mask=True \
	#model.backbone.num_points="[2048,2048,512,256]" \
	#model.weighted_filtering_score=True \



#SBR=$1
#EXPERIMENT=work_dir_py/sbr/1.0/score-denoised_sunrgbd1000fastfast/all5/point20000
#EXPERIMENT=work_dir_py/gaussian_noise/score-denoised/0.5/first50000
#DATAPATH=points_gaussian/score-denoised/0.5/pcl/
#DATAPATH=points_min2/1.0/score-denoised_sunrgbd1000fastfastlink/argmax-filtering-sbr/
